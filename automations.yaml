- id: '1650023017986'
  alias: Frigate Back Yard Notification
  description: ''
  use_blueprint:
    path: hunterjm/frigate_notification.yaml
    input:
      camera: backyard
      notify_device: 5de724ba17899d151837e1e7822fa464
      base_url: https://homeassistant.diemeester.co.za
      labels:
      - person
      presence_filter: person.rudi_o_kelly
      cooldown: 60
      silence_timer: 30
- id: '1650024016617'
  alias: Frigate Front Yard Notification
  description: ''
  use_blueprint:
    path: hunterjm/frigate_notification.yaml
    input:
      notify_device: 5de724ba17899d151837e1e7822fa464
      base_url: https://homeassistant.diemeester.co.za
      presence_filter: person.rudi_o_kelly
      cooldown: 60
      silence_timer: 30
      labels:
      - person
      camera: driveway
- id: '1650381153974'
  alias: Notify When Tanya Leave Ouma
  description: ''
  use_blueprint:
    path: homeassistant/notify_leaving_zone.yaml
    input:
      person_entity: person.tanya_o_kelly
      zone_entity: zone.ouma_charmaine
      notify_device: 5de724ba17899d151837e1e7822fa464
- id: '1635704484044'
  alias: Turn Off Fish Tank Light at 23:00
  description: ''
  trigger:
  - platform: time
    at: '23:00:00'
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.fish_tanks_lights
  - service: notify.html_browser
    data:
      message: Fish Tank Lights have been switched off.
  mode: single
- id: '1650803161063'
  alias: 'Outside Lights: turn on and off based on elevation'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: '-6'
    id: turn_lights_on
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: '-6'
    id: turn_lights_off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: turn_lights_on
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.braai
          - light.backyard_2
      - service: notify.diemeesterha
        data:
          title: Lights
          message: Lights Turned On
    - conditions:
      - condition: trigger
        id: turn_lights_off
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.braai
          - light.backyard_2
      - service: notify.mobile_app_rudi_oppo
        data:
          message: Outside Lights were turned off.
    default: []
  mode: single
- id: '1641927371719'
  alias: Turn off Kids Computers on school nights
  description: ''
  trigger:
  - platform: time
    at: input_datetime.computers_off
  condition:
  - condition: state
    entity_id: binary_sensor.schoolnight
    state: 'on'
  action:
  - service: homeassistant.turn_off
    target:
      entity_id:
      - switch.kayden_pc
      - switch.danika_laptop
    data: {}
  - service: notify.diemeesterha
    data:
      message: Kinders se Internet is af.
  mode: single
- id: '1650803958450'
  alias: 'Garage Door: Tanya Garage'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.remote_1_button_b
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.remote_3_button_b
    to: 'on'
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.left_garage
  mode: single
- id: '1650804055342'
  alias: 'Garage Light: Turn Off after 15 Minutes'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.garage_light
    to: 'on'
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.garage_light
  mode: single
- id: 22def37d-7d6e-48c4-937e-cc8b07c7dc3e
  alias: Toggle Bedroom Lights
  description: Toggle Bedroom Lights with 2 Ch Switch
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.2ch_switch_1
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.remote_2_button_d
    to: 'on'
  condition: []
  action:
  - service: light.toggle
    data:
      flash: long
    target:
      entity_id:
      - light.bedroom_lights
  mode: single
- id: '1650804867592'
  alias: Announce when Tanya Leaves Ouma
  description: Voice Notification when Tanya Leaves
  trigger:
  - platform: zone
    entity_id: person.tanya_o_kelly
    zone: zone.ouma_charmaine
    event: enter
    id: tanya_arrived_ouma
  - platform: zone
    entity_id: person.tanya_o_kelly
    zone: zone.ouma_charmaine
    event: leave
    id: tanya_left_ouma
  condition:
  - condition: state
    entity_id: person.rudi_o_kelly
    state: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: tanya_arrived_ouma
      sequence:
      - service: tts.google_say
        data:
          entity_id: media_player.bedroom_speaker
          message: Tanya has arrived at Ouma.
    - conditions:
      - condition: trigger
        id: tanya_left_ouma
      sequence:
      - service: tts.google_say
        data:
          entity_id: media_player.bedroom_speaker
          message: Tanya has left Ouma, get everything ready!
    default: []
  mode: single
- id: '1650831469675'
  alias: 'Geyser: Turn on Geyser on Workday'
  description: ''
  trigger:
  - platform: time
    at: 05:00:00
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: sensor.esp_load_shedding
    state: 'off'
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: switch.main_geyser
  mode: single
- id: '1650950160995'
  alias: 'Gate: Rudi Remote'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.remote_1_button_a
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.remote_3_button_a
    to: 'on'
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.gate_motor
  mode: single
- id: '1651747419135'
  alias: Tanya Pressence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.tanya_o_kelly
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.rudi_o_kelly
      state: home
  - condition: template
    value_template: '{{ trigger.from_state.state }} != {{ trigger.to_state.state }}'
  action:
  - variables:
      old: '{{ trigger.from_state.state }}'
      new: '{{ trigger.to_state.state }}'
      person: '{{ trigger.to_state.name }}'
  - service: tts.google_say
    data:
      entity_id: media_player.bedroom_speaker
      message: "{% if new == \"away\" and old == \"home\"%}\n  {{ person }} left home\n{%
        elif new == \"home\" %}\n  {{ person }} arrived at home\n{% elif new == \"away\"
        %}\n  {{ person }} left {{ old }}\n{% else %}\n  {{ person }} arrived at {{
        new }}\n{% endif %}"
  mode: single
- id: '1657208687283'
  alias: Load Shedding (Warning)
  description: ''
  trigger:
  - platform: template
    value_template: '{{ timedelta(minutes=(state_attr("binary_sensor.kloofendal_loadshedding_esp",
      "startsin"))) == timedelta(minutes=15) }}'
    alias: Loadshedding 15 minutes
  - platform: template
    value_template: '{{ timedelta(minutes=(state_attr("binary_sensor.kloofendal_loadshedding_esp",
      "startsin"))) == timedelta(minutes=30) }}'
    alias: Loadshedding 30 minutes
  condition:
  - condition: time
    before: input_datetime.sleep
    after: input_datetime.wake
  action:
  - service: notify.mobile_app_rudi_oppo
    data:
      message: Load Shedding
      title: Load Shedding starts in {{     (state_attr("binary_sensor.kloofendal_loadshedding_esp",
        "startsin")) }} min
  - service: media_player.volume_set
    data:
      volume_level: 0.7
    target:
      entity_id: media_player.bedroom_speaker
  - service: media_player.volume_set
    data:
      volume_level: 0.7
    target:
      entity_id: media_player.kitchen_speaker
  - service: notify.mobile_app_tanya_oppo
    data:
      message: Load Shedding
      title: Load Shedding starts in {{     (state_attr("binary_sensor.kloofendal_loadshedding_esp",
        "startsin")) }} min
  - service: notify.html_browser
    data:
      message: Load Shedding
      title: Load Shedding starts in {{     (state_attr("binary_sensor.kloofendal_loadshedding_esp",
        "startsin")) }} min
  - service: script.load_shedding_warning
    data: {}
  - service: notify.rudi_okelly_gmail_com
    data:
      target: rudi.okelly@absa.africa
      title: Load Shedding
      message: Load Shedding starts in {{ (state_attr("binary_sensor.kloofendal_loadshedding_esp",
        "startsin")) }} min
  mode: single
- id: '1657211274652'
  alias: Load Shedding (Ending)
  description: ''
  trigger:
  - platform: template
    value_template: '{{ timedelta(minutes=(state_attr("binary_sensor.kloofendal_loadshedding_esp",
      "endsin"))) == timedelta(minutes=30) }}'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: input_datetime.wake
      before: input_datetime.sleep
    - condition: not
      conditions:
      - condition: state
        entity_id: sensor.esp_status
        state: Unknown
      - condition: state
        entity_id: sensor.esp_status
        state: No Load Shedding
    enabled: true
  action:
  - service: notify.mobile_app_rudi_oppo
    data:
      message: Load shedding is currently stage {{ states( 'sensor.esp_status' ) }}.
        Load shedding in the West Rand will end soon, hopefully before {{ as_timestamp(state_attr('binary_sensor.kloofendal_loadshedding_esp',
        'ends')) | timestamp_custom("%H:%M", true) }}.
      title: Load Shedding
  - service: media_player.volume_set
    data:
      volume_level: 0.7
    target:
      entity_id: media_player.bedroom_speaker
  - service: media_player.volume_set
    data:
      volume_level: 0.7
    target:
      entity_id: media_player.kitchen_speaker
  - service: notify.mobile_app_rudi_oppo
    data:
      message: TTS
      data:
        ttl: 0
        priority: high
        media_stream: alarm_stream
        tts_text: Load shedding will end soon, hopefully before {{ as_timestamp(state_attr('binary_sensor.kloofendal_loadshedding_esp',
          'ends')) | timestamp_custom("%I:%M %p", true) }}.
    enabled: false
  - service: script.load_shedding_ending
    metadata: {}
    data: {}
  mode: single
- id: '1657218088006'
  alias: Load Shedding (Stage)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.esp_status
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != ''unavailable'' and trigger.to_state.state
      != ''unavailable'' }}'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: time
          after: input_datetime.sleep
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
          before: 00:00:00
        - condition: time
          before: input_datetime.wake
          weekday:
          - sun
          - sat
          - fri
          - thu
          - wed
          - tue
          - mon
          after: 00:00:00
      sequence:
      - wait_for_trigger:
        - platform: time
          at: input_datetime.wake
        continue_on_timeout: false
    default: []
  - service: notify.mobile_app_rudi_oppo
    data:
      title: Load Shedding
      message: Load Shedding Stage {{ states.sensor.esp_status.state }}
  - service: tts.google_say
    data:
      entity_id: all
      message: '{% if is_state("sensor.esp_status", "No Load Shedding") %} Load shedding
        has been suspended. {% else %} Load shedding has been changed to stage {{
        states.sensor.esp_status.state }} {% endif %}

        '
      language: en
      cache: true
  mode: single
- id: '1657274688294'
  alias: Load Shedding (Turn Off Geysers)
  description: ''
  trigger:
  - platform: template
    value_template: '{{ timedelta(minutes=(state_attr("binary_sensor.kloofendal_loadshedding_esp",
      "startsin"))) == timedelta(minutes=5) }}'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.esp_status
      state: Unknown
    - condition: state
      entity_id: sensor.esp_status
      state: No Load Shedding
    enabled: true
  action:
  - service: homeassistant.turn_off
    target:
      entity_id:
      - switch.main_geyser
      - switch.outside_building_kitchen_geyser
    data: {}
  mode: single
- id: '1657274855875'
  alias: Load Shedding (Turn Geysers On)
  description: Turn on Geysers after Load Shedding
  trigger:
  - platform: template
    value_template: '{{ timedelta(minutes=(state_attr("binary_sensor.kloofendal_loadshedding_esp",
      "endsin"))) == timedelta(minutes=5) }}'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.esp_status
      state: Unknown
    - condition: state
      entity_id: sensor.esp_status
      state: No Load Shedding
    enabled: true
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: switch.main_geyser
  mode: single
- id: '1657553203018'
  alias: Main Geyser Hot Notification
  description: Notification to Cellphone to advise geyser is hot
  trigger:
  - platform: state
    entity_id: binary_sensor.main_geyser_heating
    for:
      hours: 0
      minutes: 5
      seconds: 0
    to: 'off'
  action:
  - service: notify.mobile_app_rudi_oppo
    data:
      message: Main Geyser Hot
  mode: single
- id: '1657570700857'
  alias: Notify of events Frigate -> Telegram
  trigger:
  - platform: mqtt
    topic: frigate/events
  condition:
  - condition: template
    value_template: '{{ trigger.payload_json["type"] == "end" }}'
  - condition: time
    before: 06:00:00
    after: '19:00:00'
  action:
  - service: notify.diemeesterha
    data_template:
      message: A {{trigger.payload_json["after"]["label"]}} was detected.
      data:
        photo:
        - url: https://homeassistant.diemeester.co.za/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
          caption: A {{trigger.payload_json["after"]["label"]}} was detected on {{
            trigger.payload_json["after"]["camera"] }} camera
  - delay:
      hours: 0
      minutes: 0
      seconds: 45
      milliseconds: 0
  - service: notify.diemeesterha
    data_template:
      message: Video of alert
      data:
        video:
        - url: https://homeassistant.diemeester.co.za/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/{{trigger.payload_json["after"]["camera"]}}/clip.mp4
          timeout: 1000
          caption: A {{trigger.payload_json["after"]["label"]}} was detected on {{
            trigger.payload_json["after"]["camera"] }} camera
  mode: single
- id: '1660248879857'
  alias: 'Geyser: Turn on Geyser on Non-Workday'
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'off'
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id:
      - switch.main_geyser
  mode: single
- id: '1660250439702'
  alias: Turn Geysers Off At Lights Out
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.bedroom
    to: 'off'
    for:
      hours: 0
      minutes: 6
      seconds: 0
  condition:
  - condition: time
    after: '22:00:00'
    before: 01:00:00
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - switch.main_geyser
      - switch.outside_building_kitchen_geyser
  mode: single
- id: '1661540889751'
  alias: Notify when someone enters or leaves a zone
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.danika_o_kelly
    - person.tanya_o_kelly
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
  - service: notify.diemeesterha
    data_template:
      title: Location update {{ states.sensor.time.state }}
      message: '{{ trigger.to_state.attributes.friendly_name }} {% if trigger.to_state.state
        == ''not_home'' %}has left {{ trigger.from_state.state }}{% endif %}{% if
        trigger.from_state.state == ''not_home'' %}arrived at {{ trigger.to_state.state
        }}{% endif %}'
- id: '1663523457148'
  alias: Load Shedding (Final Warning)
  description: ''
  trigger:
  - platform: template
    value_template: '{{ timedelta(minutes=(state_attr("binary_sensor.kloofendal_loadshedding_esp",
      "startsin"))) == timedelta(minutes=5) }}'
    alias: Loadshedding 5 minutes
  condition:
  - condition: time
    after: input_datetime.wake
  action:
  - service: notify.mobile_app_rudi_oppo
    data:
      title: Load Shedding
      message: Load Shedding starts in {{     (state_attr("binary_sensor.kloofendal_loadshedding_esp",
        "startsin")) }} min
  - service: media_player.volume_set
    data:
      volume_level: 0.7
    target:
      entity_id: media_player.bedroom_speaker
  - service: media_player.volume_set
    data:
      volume_level: 0.7
    target:
      entity_id: media_player.kitchen_speaker
  - service: tts.google_say
    data:
      message: This is the final load shedding warning.  In {{ state_attr( "binary_sensor.kloofendal_loadshedding_esp",
        "startsin") }} minutes load shedding will be activated. Power should be restored
        at {{ as_timestamp(state_attr( 'binary_sensor.kloofendal_loadshedding_esp',
        'ends')) | timestamp_custom("%I:%M %p", true) }}.
      entity_id: all
  - service: notify.mobile_app_tanya_oppo
    data:
      title: Load Shedding
      message: Load Shedding starts in {{     (state_attr("binary_sensor.kloofendal_loadshedding_esp",
        "startsin")) }} min
  - service: notify.mobile_app_rudi_oppo
    data:
      message: TTS
      data:
        ttl: 0
        priority: high
        media_stream: alarm_stream
        tts_text: Final Warning Load Shedding starts in {{    (state_attr("binary_sensor.kloofendal_loadshedding_esp",
          "startsin")) }} min, start the generator.
    enabled: false
  - service: notify.html_browser
    data:
      title: Load Shedding
      message: Load Shedding starts in {{     (state_attr("binary_sensor.kloofendal_loadshedding_esp",
        "startsin")) }} min.
  mode: single
- id: '1663699813318'
  alias: Plex - New media added
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.die_meester_plex_library_tv_shows
    id: episode
  action:
  - service: notify.html_browser
    data:
      message: '{{ state_attr( ''sensor.die_meester_plex_library_tv_shows'', ''last_added_item''
        ) }} got added to {{ state_attr( ''sensor.die_meester_plex_library_tv_shows'',
        ''friendly_name'' ) }}'
      title: Something to Watch
  - service: notify.diemeesterha
    data:
      title: New Episode Added
      message: '{{ state_attr( ''sensor.die_meester_plex_library_tv_shows'', ''last_added_item''
        )}} was added to {{ state_attr( ''sensor.die_meester_plex_library_tv_shows'',
        ''friendly_name'' )}}'
  - service: notify.mobile_app_tanya_oppo
    data:
      title: New Episode Added
      message: '{{ state_attr( ''sensor.die_meester_plex_library_tv_shows'', ''last_added_item''
        )}} was added to {{ state_attr( ''sensor.die_meester_plex_library_tv_shows'',
        ''friendly_name'' )}}'
  mode: single
- id: '1663704936553'
  alias: Turn Off NAS during Load Shedding
  description: Preserve power of Inverter
  trigger:
  - platform: template
    value_template: '{{ timedelta(minutes=(state_attr("binary_sensor.kloofendal_loadshedding_esp",
      "startsin"))) == timedelta(minutes=5) }}'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: switch.nas
      state: 'on'
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - switch.docker_sonarr
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: switch.nas
  - service: telegram_bot.send_message
    data:
      title: NAS
      message: Nas are going down for loadshedding
  mode: single
- id: '1663705047619'
  alias: Turn On NAS after Load Shedding at Night
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kloofendal_loadshedding_esp
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: time
      before: input_datetime.wake
      enabled: false
    - condition: state
      entity_id: switch.nas
      state: 'off'
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: switch.nas
  mode: single
- id: '1664464599821'
  alias: Bedroom Light Increment Scene
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.2ch_switch_2
    to: 'on'
  condition:
  - condition: state
    entity_id: light.bedroom
    state: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  action:
  - service: input_select.select_next
    data: {}
    target:
      entity_id: input_select.bedroomscene
  mode: single
- id: '1664464771642'
  alias: Bedroom Lights Change Scene
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.bedroomscene
  condition: []
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.{{ states('input_select.bedroomscene') }}
  mode: single
- id: '1664482734870'
  alias: Reload Load Shedding after Restart
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.esp_load_shedding
    to: unknown
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: sensor.esp_load_shedding
  mode: single
- id: '1664483467435'
  alias: Turn Down Lights when Watching TV
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.plex_plex_for_samsung_tv_2018
    to: playing
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: Plex_Playing
  - platform: state
    entity_id:
    - media_player.plex_plex_for_samsung_tv_2018
    from: playing
    id: plex_not_playing
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: time
    after: '20:00:00'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Plex_Playing
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.tv_night
    - conditions:
      - condition: trigger
        id: plex_not_playing
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.bedroom_night
  mode: single
- id: '1666634255034'
  alias: Danika Light Switch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.1ch_switch
    to: 'on'
  condition: []
  action:
  - service: light.toggle
    data: {}
  mode: single
- id: '1670174021966'
  alias: Motion | Lounge
  description: Lounge Motion Detection
  use_blueprint:
    path: homeassistant/motion_light.yaml
    input:
      motion_entity: binary_sensor.lumi_lumi_sensor_motion_aq2_iaszone_2
      light_target:
        entity_id:
        - light.lounge
- id: '1670222598477'
  alias: Motion | Foyer | Manual
  description: Manual Foyer
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_sensor_motion_aq2_iaszone_2
    from: 'off'
    to: 'on'
  condition:
  - or:
    - condition: sun
      before: sunrise
      after: sunset
    - condition: numeric_state
      entity_id: sensor.lumi_lumi_sensor_motion_aq2_illuminance_2
      below: 11
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id:
      - light.lounge
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.lumi_lumi_sensor_motion_aq2_iaszone_2
      from: 'on'
      to: 'off'
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.lounge
  mode: restart
- id: '1672432928510'
  alias: Cycle Lights
  description: ''
  trigger: []
  condition: []
  action: []
  mode: single
- id: '1674627123653'
  alias: Turn on Docker containers
  description: Check Plex state is not available and turn on Docker containers.
  trigger:
  - platform: state
    entity_id:
    - sensor.plex_recently_added
    for:
      hours: 0
      minutes: 1
      seconds: 0
    to: Online
  condition: []
  action:
  - service: homeassistant.turn_on
    data: {}
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id:
      - switch.docker_sonarr
  mode: single
- id: '1675688633101'
  alias: Calendar Notification
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: -0:10:0
    entity_id: calendar.family
  condition: []
  action:
  - service: notify.persistent_notification
    data:
      message: Event {{ trigger.calendar_event.summary }} @ {{ trigger.calendar_event.start
        }}
  - service: notify.html_browser
    data:
      message: Event {{ trigger.calendar_event.summary }} @ {{ trigger.calendar_event.start
        }}
  mode: single
- id: '1683575802597'
  alias: Turn on Geyser After Load Shedding
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kloofendal_loadshedding_esp
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: switch.main_geyser
  mode: single
- id: '1700752104412'
  alias: Control Swimming Pool Pump
  description: Run the pool pump for x number of hours a day.
  trigger:
  - platform: state
    entity_id: binary_sensor.kloofendal_loadshedding_esp
  - platform: time_pattern
    minutes: /5
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.kloofendal_loadshedding_esp
          state: 'off'
        - condition: state
          entity_id: binary_sensor.kloofendal_loadshedding_esp
          state: unavailable
      - condition: template
        value_template: '{{ states(''sensor.daily_pool_pump_runtime'') | float < states(''input_number.swimming_pool_pump_runtime'')
          | float }}'
      sequence:
      - service: switch.turn_on
        entity_id: switch.swimming_pool_swimming_pool
    - conditions:
      - condition: state
        entity_id: binary_sensor.kloofendal_loadshedding_esp
        state: 'on'
      sequence:
      - service: switch.turn_off
        entity_id: switch.swimming_pool_swimming_pool
  - condition: template
    value_template: '{{ states(''sensor.daily_pool_pump_runtime'') | float >= states(''input_number.swimming_pool_pump_runtime'')
      | float }}'
  - service: switch.turn_off
    entity_id: switch.swimming_pool_swimming_pool
- id: '1703159316180'
  alias: Gate Bell Button
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.gate_bell_button
    to: 'on'
  condition: []
  action:
  - service: chime_tts.say
    target:
      entity_id:
      - media_player.bedroom_speaker
    data:
      tts_platform: edge_tts
      message: Iemand druk die donnerse knoppie by die hek. Julle sal maar moet kyk
        of julle wil oopmaak.
      chime_path: whistle
      end_chime_path: bells
      volume_level: 1
      announce: true
  - service: notify.mobile_app_rudi_oppo
    data:
      title: Gate Bell
      message: Someone is at the gate.
  mode: single
- id: '1704390773222'
  alias: Announce when service is down
  description: Announce when Service is down
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: notify
      service: mobile_app_rudi_oppo
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.service_data.data.status == 0 }}'
  - condition: time
    after: 08:00:00
    before: '20:00:00'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: person.rudi_o_kelly
    state: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  action:
  - service: chime_tts.say
    data:
      chime_path: bells
      end_chime_path: bells
      delay: 450
      final_delay: 200
      tts_platform: google_translate
      cache: false
      announce: true
      message: '{{ trigger.event.data.service_data.data.name }} is down.'
    target:
      entity_id: media_player.bedroom_speaker
- id: '1704569555680'
  alias: Camera Notification Swimming Pool
  description: ''
  use_blueprint:
    path: SgtBatten/Stable.yaml
    input:
      camera: camera.swimmingpool
      notify_device: 5de724ba17899d151837e1e7822fa464
      critical: 'true'
      update_thumbnail: true
      color: indigo
- id: '1705224158608'
  alias: Update Schedule after Load Shedding
  description: Automation to update load schedule after load shedding ends.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kloofendal_loadshedding_esp
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: homeassistant.update_entity
    target:
      entity_id: sensor.esp_load_shedding
    data: {}
  mode: single
- id: '1705499462094'
  alias: Collect Danika
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_button.pickup
  condition: []
  action:
  - service: notify.mobile_app_rudi_oppo
    metadata: {}
    data:
      title: Danika is Ready
      message: Pick up Danika
  mode: single
- id: '1713032398745'
  alias: Turn on Driveway Light for Person
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.driveway_yard_person_occupancy
    - binary_sensor.driveway_yard_car_occupancy
    - binary_sensor.front_garden_person_occupancy
    - binary_sensor.front_garden_car_occupancy
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.driveway
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.driveway
  mode: restart
- id: '1713033726008'
  alias: Gate Motion
  description: Turns on the Driveway light on Motion detected.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.driveway_street_all_occupancy
    - binary_sensor.driveway_yard_all_occupancy
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 3
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.gate
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.gate
  mode: restart
